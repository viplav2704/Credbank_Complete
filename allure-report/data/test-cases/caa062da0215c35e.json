{"uid":"caa062da0215c35e","name":"test_UserMgt_url001","fullName":"testCases.test_userManagement.Test_UserManagement#test_UserMgt_url001","historyId":"271f1fc7e494385e0cad585ebc139c45","time":{"start":1733557188942,"stop":1733557188942,"duration":0},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_NAME_NOT_RESOLVED\n  (Session info: chrome=131.0.6778.109)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6EE906CF5+28821]\n\t(No symbol) [0x00007FF6EE873880]\n\t(No symbol) [0x00007FF6EE71578A]\n\t(No symbol) [0x00007FF6EE712E88]\n\t(No symbol) [0x00007FF6EE703BF9]\n\t(No symbol) [0x00007FF6EE70594F]\n\t(No symbol) [0x00007FF6EE703EBF]\n\t(No symbol) [0x00007FF6EE70371B]\n\t(No symbol) [0x00007FF6EE70365A]\n\t(No symbol) [0x00007FF6EE701274]\n\t(No symbol) [0x00007FF6EE701B3C]\n\t(No symbol) [0x00007FF6EE71885A]\n\t(No symbol) [0x00007FF6EE7B01FE]\n\t(No symbol) [0x00007FF6EE78F2FA]\n\t(No symbol) [0x00007FF6EE7AF412]\n\t(No symbol) [0x00007FF6EE78F0A3]\n\t(No symbol) [0x00007FF6EE75A778]\n\t(No symbol) [0x00007FF6EE75B8E1]\n\tGetHandleVerifier [0x00007FF6EEC3FCED+3408013]\n\tGetHandleVerifier [0x00007FF6EEC5745F+3504127]\n\tGetHandleVerifier [0x00007FF6EEC4B63D+3455453]\n\tGetHandleVerifier [0x00007FF6EE9CBDFB+835995]\n\t(No symbol) [0x00007FF6EE87EB9F]\n\t(No symbol) [0x00007FF6EE87A854]\n\t(No symbol) [0x00007FF6EE87A9ED]\n\t(No symbol) [0x00007FF6EE86A1D9]\n\tBaseThreadInitThunk [0x00007FFE9BA0259D+29]\n\tRtlUserThreadStart [0x00007FFE9CF4AF38+40]","statusTrace":"@pytest.fixture(scope=\"class\")\n    def setup_login():\n        driver = webdriver.Chrome()\n        driver.maximize_window()\n>       driver.get(url_login)\n\ntestCases\\conftest.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\Jubilee\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:363: in get\n    self.execute(Command.GET, {\"url\": url})\nC:\\Users\\Jubilee\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000190A9540BF0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_NAME_NOT_RESOLVED\\\\n  (...07FF6EE86A1D9]\\\\n\\\\tBaseThreadInitThunk [0x00007FFE9BA0259D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFE9CF4AF38+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_NAME_NOT_RESOLVED\nE         (Session info: chrome=131.0.6778.109)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6EE906CF5+28821]\nE       \t(No symbol) [0x00007FF6EE873880]\nE       \t(No symbol) [0x00007FF6EE71578A]\nE       \t(No symbol) [0x00007FF6EE712E88]\nE       \t(No symbol) [0x00007FF6EE703BF9]\nE       \t(No symbol) [0x00007FF6EE70594F]\nE       \t(No symbol) [0x00007FF6EE703EBF]\nE       \t(No symbol) [0x00007FF6EE70371B]\nE       \t(No symbol) [0x00007FF6EE70365A]\nE       \t(No symbol) [0x00007FF6EE701274]\nE       \t(No symbol) [0x00007FF6EE701B3C]\nE       \t(No symbol) [0x00007FF6EE71885A]\nE       \t(No symbol) [0x00007FF6EE7B01FE]\nE       \t(No symbol) [0x00007FF6EE78F2FA]\nE       \t(No symbol) [0x00007FF6EE7AF412]\nE       \t(No symbol) [0x00007FF6EE78F0A3]\nE       \t(No symbol) [0x00007FF6EE75A778]\nE       \t(No symbol) [0x00007FF6EE75B8E1]\nE       \tGetHandleVerifier [0x00007FF6EEC3FCED+3408013]\nE       \tGetHandleVerifier [0x00007FF6EEC5745F+3504127]\nE       \tGetHandleVerifier [0x00007FF6EEC4B63D+3455453]\nE       \tGetHandleVerifier [0x00007FF6EE9CBDFB+835995]\nE       \t(No symbol) [0x00007FF6EE87EB9F]\nE       \t(No symbol) [0x00007FF6EE87A854]\nE       \t(No symbol) [0x00007FF6EE87A9ED]\nE       \t(No symbol) [0x00007FF6EE86A1D9]\nE       \tBaseThreadInitThunk [0x00007FFE9BA0259D+29]\nE       \tRtlUserThreadStart [0x00007FFE9CF4AF38+40]\n\nC:\\Users\\Jubilee\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: WebDriverException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup_login","time":{"start":1733557188944,"stop":1733557217286,"duration":28342},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_NAME_NOT_RESOLVED\n  (Session info: chrome=131.0.6778.109)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6EE906CF5+28821]\n\t(No symbol) [0x00007FF6EE873880]\n\t(No symbol) [0x00007FF6EE71578A]\n\t(No symbol) [0x00007FF6EE712E88]\n\t(No symbol) [0x00007FF6EE703BF9]\n\t(No symbol) [0x00007FF6EE70594F]\n\t(No symbol) [0x00007FF6EE703EBF]\n\t(No symbol) [0x00007FF6EE70371B]\n\t(No symbol) [0x00007FF6EE70365A]\n\t(No symbol) [0x00007FF6EE701274]\n\t(No symbol) [0x00007FF6EE701B3C]\n\t(No symbol) [0x00007FF6EE71885A]\n\t(No symbol) [0x00007FF6EE7B01FE]\n\t(No symbol) [0x00007FF6EE78F2FA]\n\t(No symbol) [0x00007FF6EE7AF412]\n\t(No symbol) [0x00007FF6EE78F0A3]\n\t(No symbol) [0x00007FF6EE75A778]\n\t(No symbol) [0x00007FF6EE75B8E1]\n\tGetHandleVerifier [0x00007FF6EEC3FCED+3408013]\n\tGetHandleVerifier [0x00007FF6EEC5745F+3504127]\n\tGetHandleVerifier [0x00007FF6EEC4B63D+3455453]\n\tGetHandleVerifier [0x00007FF6EE9CBDFB+835995]\n\t(No symbol) [0x00007FF6EE87EB9F]\n\t(No symbol) [0x00007FF6EE87A854]\n\t(No symbol) [0x00007FF6EE87A9ED]\n\t(No symbol) [0x00007FF6EE86A1D9]\n\tBaseThreadInitThunk [0x00007FFE9BA0259D+29]\n\tRtlUserThreadStart [0x00007FFE9CF4AF38+40]\n\n","statusTrace":"  File \"C:\\Users\\Jubilee\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pluggy\\_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"C:\\Users\\Jubilee\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"C:\\Users\\Jubilee\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pluggy\\_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Jubilee\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\fixtures.py\", line 1139, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Jubilee\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\fixtures.py\", line 890, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Jubilee\\Desktop\\Credence\\CredencePython\\pythonProject\\pythonProject\\Credbank\\testCases\\conftest.py\", line 27, in setup_login\n    driver.get(url_login)\n  File \"C:\\Users\\Jubilee\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 363, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"C:\\Users\\Jubilee\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\Jubilee\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"stepsCount":0,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"parentSuite","value":"testCases"},{"name":"suite","value":"test_userManagement"},{"name":"subSuite","value":"Test_UserManagement"},{"name":"host","value":"Viplav"},{"name":"thread","value":"40084-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testCases.test_userManagement"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"caa062da0215c35e.json","parameterValues":[]}